name: Issue Assigner

on:
  issues:
    types: [labeled]

jobs:
  assign-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Assign based on label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Label to assignee mapping - supports both single assignee and arrays of assignees
            const labelToAssignees = [
              'documentation': 'shripad621git',
              'test': 'shripad621git',
              
              // One-to-many mappings
              'datamodel': ['pimpalemahesh', 'shripad621git'],
            };

            async function assignIssue(item) {
              // Get the label that triggered this event
              const newLabel = context.payload.label.name;
              
              // Check if we have assignee(s) for this label
              if (labelToAssignees[newLabel]) {
                // Convert single assignee to array for consistent handling
                const assignees = Array.isArray(labelToAssignees[newLabel]) 
                  ? labelToAssignees[newLabel] 
                  : [labelToAssignees[newLabel]];
                
                try {
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: item.number,
                    assignees: assignees
                  });
                  console.log(`Assigned ${item.html_url} to ${assignees.join(', ')} based on label ${newLabel}`);
                } catch (error) {
                  console.error(`Error assigning ${item.html_url}: ${error}`);
                }
              }
            }

            const item = context.payload.issue || context.payload.pull_request;
            if (item) {
              await assignIssue(item);
            } 
